#+TITLE: Empirical Exercises 4.2 and 5.2
#+AUTHOR: Zheng Tian
#+DATE: April 25, 2016
#+OPTIONS: toc:1 H:3 num:1
#+PROPERTY: header-args:R :session my-r-session
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [a4paper,11pt]
#+LATEX_HEADER: \usepackage[margin=1.2in]{geometry}
#+LATEX_HEADER: \usepackage{setspace}
#+LATEX_HEADER: \singlespacing
#+LATEX_HEADER: \usepackage{parskip}

\vspace{1cm}

This file include answers and R codes for completing Empirical
Exercises 4.2 and 5.2 in Introduction to Econometrics (3rd edition) by Stock
and Watson.

* Reading the Data

The first step is to read the data file into R. The data files for
this problem are =TeachingRatings.dta= and =TeachingRatings.xls=,
accompanied by a descriptive file ~TeachingRatings_Description.pdf~.

- Read the STATA file

  #+BEGIN_SRC R :results output silent :exports code :eval
  library(foreign)
  teachingdata <- read.dta("TeachingRatings.dta")
  #+END_SRC

- Upon reading the data, we can take a glimpse on the data.

  - Use =head= or =tail= to look at the first or last few observations

    #+BEGIN_SRC R :results output org :exports code :eval
    head(teachingdata)
    #+END_SRC

    #+RESULTS:
    #+BEGIN_SRC org
      minority age female onecredit     beauty course_eval intro nnenglish
    1        1  36      1         0  0.2899157         4.3     0         0
    2        0  59      0         0 -0.7377322         4.5     0         0
    3        0  51      0         0 -0.5719836         3.7     0         0
    4        0  40      1         0 -0.6779634         4.3     0         0
    5        0  31      1         0  1.5097942         4.4     0         0
    6        0  62      0         0  0.5885687         4.2     0         0
    #+END_SRC

  - The =str= function is used to check the structure of the data set.

    #+BEGIN_SRC R :results output :exports code :eval
    str(teachingdata)
    #+END_SRC

    #+RESULTS:
    #+begin_example
    'data.frame':	463 obs. of  8 variables:
     $ minority   : num  1 0 0 0 0 0 0 0 0 0 ...
     $ age        : num  36 59 51 40 31 62 33 51 33 47 ...
     $ female     : num  1 0 0 1 1 0 1 1 1 0 ...
     $ onecredit  : int  0 0 0 0 0 0 0 0 0 0 ...
     $ beauty     : num  0.29 -0.738 -0.572 -0.678 1.51 ...
     $ course_eval: num  4.3 4.5 3.7 4.3 4.4 ...
     $ intro      : num  0 0 0 0 0 0 0 0 0 0 ...
     $ nnenglish  : num  0 0 0 0 0 0 0 0 0 0 ...
     - attr(*, "datalabel")= chr ""
     - attr(*, "time.stamp")= chr "10 Dec 2005 14:29"
     - attr(*, "formats")= chr  "%9.0g" "%9.0g" "%9.0g" "%8.0g" ...
     - attr(*, "types")= int  254 254 254 251 254 254 254 254
     - attr(*, "val.labels")= chr  "" "" "" "" ...
     - attr(*, "var.labels")= chr  "Minority" "Professor's age" "female = 1" "Equal 1 if a one-credit course" ...
     - attr(*, "version")= int 8
    #+end_example

* Summary Statistics
The =summary= function is a generic function for making some summary
statistics of a given object.

#+BEGIN_SRC R :results output :exports both :eval
summary(teachingdata)
#+END_SRC

#+RESULTS:
#+begin_example
    minority           age            female         onecredit
 Min.   :0.0000   Min.   :29.00   Min.   :0.0000   Min.   :0.00000
 1st Qu.:0.0000   1st Qu.:42.00   1st Qu.:0.0000   1st Qu.:0.00000
 Median :0.0000   Median :48.00   Median :0.0000   Median :0.00000
 Mean   :0.1382   Mean   :48.37   Mean   :0.4212   Mean   :0.05832
 3rd Qu.:0.0000   3rd Qu.:57.00   3rd Qu.:1.0000   3rd Qu.:0.00000
 Max.   :1.0000   Max.   :73.00   Max.   :1.0000   Max.   :1.00000
     beauty          course_eval        intro          nnenglish
 Min.   :-1.45049   Min.   :2.100   Min.   :0.0000   Min.   :0.00000
 1st Qu.:-0.65627   1st Qu.:3.600   1st Qu.:0.0000   1st Qu.:0.00000
 Median :-0.06801   Median :4.000   Median :0.0000   Median :0.00000
 Mean   : 0.00000   Mean   :3.998   Mean   :0.3391   Mean   :0.06048
 3rd Qu.: 0.54560   3rd Qu.:4.400   3rd Qu.:1.0000   3rd Qu.:0.00000
 Max.   : 1.97002   Max.   :5.000   Max.   :1.0000   Max.   :1.00000
#+end_example

We can create a pretty table using the following codes. Table
\ref{tab:sum-stats} is created automatically by the following codes.

#+BEGIN_SRC R :results output latex :exports both :eval
library(stargazer)
stargazer(teachingdata,
  title = "Summary Statistics", label = "tab:sum-stats")
#+END_SRC

#+RESULTS:
#+BEGIN_LaTeX

% Table created by stargazer v.5.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Mon, Apr 18, 2016 - 10:54:55
\begin{table}[!htbp] \centering
  \caption{Summary Statistics}
  \label{tab:sum-stats}
\begin{tabular}{@{\extracolsep{5pt}}lccccc}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
Statistic & \multicolumn{1}{c}{N} & \multicolumn{1}{c}{Mean} & \multicolumn{1}{c}{St. Dev.} & \multicolumn{1}{c}{Min} & \multicolumn{1}{c}{Max} \\
\hline \\[-1.8ex]
minority & 463 & 0.138 & 0.346 & 0 & 1 \\
age & 463 & 48.365 & 9.803 & 29 & 73 \\
female & 463 & 0.421 & 0.494 & 0 & 1 \\
onecredit & 463 & 0.058 & 0.235 & 0 & 1 \\
beauty & 463 & 0.00000 & 0.789 & $-$1.450 & 1.970 \\
course\_eval & 463 & 3.998 & 0.555 & 2.100 & 5.000 \\
intro & 463 & 0.339 & 0.474 & 0 & 1 \\
nnenglish & 463 & 0.060 & 0.239 & 0 & 1 \\
\hline \\[-1.8ex]
\end{tabular}
\end{table}
#+END_LaTeX

* Scatterplot

We can make scatterplot using the =plot= function.

#+NAME: scatterplot
#+BEGIN_SRC R :results output graphics :file ./img/beauty.png :exports both :eval
  teaching.formula <- course_eval ~ beauty
  plot(teaching.formula, data = teachingdata,
     main = "The Scatterplot of Course Evaluation on Professor's Beauty",
     xlab="Beauty", ylab = "Course evaluation", col = "blue")
#+END_SRC

#+CAPTION: The scatterplot of course evaulation on professors' beauty
#+NAME: fig:scatterplot
#+ATTR_LATEX: :width 0.75\textwidth
#+RESULTS: scatterplot
[[file:./img/beauty.png]]

* Regression

Now let's estimate the regression model. The results is reported
in Table \ref{tab:ols-1}

#+BEGIN_SRC R :results output latex :exports both :eval
  # run a regression of course evaluation on professor's beauty
  teaching.ols <- lm(teaching.formula, data = teachingdata)

  # create the latex table
  stargazer(teaching.ols,
    covariate.labels = c("Prof. Beauty"),
    dep.var.labels = c("Course Evaluations"),
    title = "The OLS Estimation of the Regression of Course Evaluation on Beauty",
    label = "tab:ols-1", single.row = TRUE, omit.stat = c("adj.rsq", "f")
  )
#+END_SRC

#+RESULTS:
#+BEGIN_LaTeX

% Table created by stargazer v.5.2 by Marek Hlavac, Harvard University. E-mail: hlavac at fas.harvard.edu
% Date and time: Mon, Apr 18, 2016 - 10:56:50
\begin{table}[!htbp] \centering
  \caption{The OLS Estimation of the Regression of Course Evaluation on Beauty}
  \label{tab:ols-1}
\begin{tabular}{@{\extracolsep{5pt}}lc}
\\[-1.8ex]\hline
\hline \\[-1.8ex]
 & \multicolumn{1}{c}{\textit{Dependent variable:}} \\
\cline{2-2}
\\[-1.8ex] & Course Evaluations \\
\hline \\[-1.8ex]
 Prof. Beauty & 0.133$^{***}$ (0.032) \\
  Constant & 3.998$^{***}$ (0.025) \\
 \hline \\[-1.8ex]
Observations & 463 \\
R$^{2}$ & 0.036 \\
Residual Std. Error & 0.545 (df = 461) \\
\hline
\hline \\[-1.8ex]
\textit{Note:}  & \multicolumn{1}{r}{$^{*}$p$<$0.1; $^{**}$p$<$0.05; $^{***}$p$<$0.01} \\
\end{tabular}
\end{table}
#+END_LaTeX

* Hypothesis test
We then test the hypothesis $H_0: \beta_1 = 0$ against $H_1: \beta_1
\neq 0$, for which we use the following codes.

#+BEGIN_SRC R :exports codes :results output :eval
library(AER)
# using coeftest in the lmtest package
# using heteroskedasticity-robust variance with the HC1 type
test1 <- coeftest(teaching.ols, vcov. = vcovHC(teaching.ols, type = "HC1"))
t.beauty <- test1[2, 3]
p.beauty <- test1[2, 4]
#+END_SRC

* Answers to the Questions
** 4.2
- a. :: The scatterplot is Figure [[fig:scatterplot]]. There appears to be
        a weak positive relationship between course evaluation and the
        beauty index.

- b. :: The estimation results are reported in Table \ref{tab:ols-1}.
          #+BEGIN_SRC R :results silent :exports none
          beauty.watson <- mean(teachingdata$beauty)
          beauty.stock <- mean(teachingdata$beauty) + sd(teachingdata$beauty)
          ave.courseval <- mean(teachingdata$course_eval)

          # do prediction step by step
          b0 <- teaching.ols$coef[1]
          b1 <- teaching.ols$coef[2]
          courseval.predict <- b0 + b1 * c(beauty.watson, beauty.stock)
          names(courseval.predict) <- c("waston", "stock")
          #+END_SRC

        The slope is src_R[:exports results]{round(b1, 4)} and the intercept is
        src_R[:exports results]{round(b0, 3)}. The sample mean of course evaluation is
        src_R[:exports results]{round(ave.courseval, 3)}, which coincides with the slope
        because the sample mean of /Beauty/ is
        src_R[:exports results]{round(beauty.watson, 4)}.


- c. :: The beauty indices for Professors Stock and Watson are
        src_R[:exports results]{round(beauty.stock, 4)} (one standard deviation)
        and src_R[:exports results]{round(beauty.watson, 4)} (sample average).
        Thus, the predicted course evaluations for Professors
        Stock and Watson are src_R[:exports results]{round(courseval.predict[2], 4)} and
        src_R[:exports results]{round(courseval.predict[1], 4)}, respectively.

        #+BEGIN_SRC R :results silent :exports none
          beauty.sd <- sd(teachingdata$beauty)
          courseval.sd <- sd(teachingdata$course_eval)
          delta.courseval <- b1 * beauty.sd
        #+END_SRC

- d. :: The standard deviation of course evaluation is
        src_R[:exports results]{round(courseval.sd, 4)}, and the standard deviation of
        beauty is src_R[:exports results]{round(beauty.sd, 4)}. A one-standard-deviation
        increase in beauty is expected to increase course evaluation
        by src_R[:exports results]{round(delta.courseval, 4)}, or
        src_R[:exports results]{round(delta.courseval/courseval.sd, 2)} of standard deviation of course
        evaluations. The effect is small.

        #+BEGIN_SRC R :results silent :exports none
          rsq <- summary(teaching.ols)$r.squared
        #+END_SRC

- e. :: The regression R^2 is src_R[:exports results]{round(rsq, 4)}, so that /Beauty/
        explains only src_R[:exports results]{round(rsq, 3) * 100} percent of the
        variance in course evaluations.

** 5.2
The t-statistics for testing the null hypothesis of $\beta_1=0$ is
src_R[:exports results]{round(t.beauty, 4)} $> 1.96$ and the p-value
is src_R[:exports results]{round(p.beauty, 4)} $< 0.01$. Thus, we can
reject the null hypothesis at the 1% significant level.

* Appendix
The R codes for generating all results above are appended here.
#+BEGIN_EXAMPLE
## This script is to do the empirical exercise 4.2 and 5.2

# Read the data TeachingRatings.dta
library(foreign)
teachingdata <- read.dta("TeachingRatings.dta")
head(teachingdata)
str(teachingdata)
summary(teachingdata)

# a scatterplot of course evaluation on professor's beauty
teaching.formula <- course_eval ~ beauty

plot(teaching.formula, data = teachingdata,
     main = "The Scatterplot of Course Evaluation on Professor's Beauty",
     xlab="Beauty", ylab = "Course evaluation", col = "blue")

# run a regression of course evaluation on professor's beauty
teaching.ols <- lm(teaching.formula, data = teachingdata)
summary(teaching.ols)

# predict
beauty.watson <- mean(teachingdata$beauty)
beauty.stock <- mean(teachingdata$beauty) + sd(teachingdata$beauty)

# using predict() function
courseval.watson <- predict(teaching.ols, data.frame(beauty=beauty.watson))
courseval.stock <- predict(teaching.ols, data.frame(beauty=beauty.stock))

# do prediction step by step
b0 <- teaching.ols$coef[1]
b1 <- teaching.ols$coef[2]
courseval.predict <- b0 + b1 * c(beauty.watson, beauty.stock)
names(courseval.predict) <- c("waston", "stock")

# evaluate the effects
beauty.sd <- sd(teachingdata$beauty)
courseval.sd <- sd(teachingdata$course_eval)
delta.courseval <- b1 * beauty.sd

# r-squred
rsq <- summary(teaching.ols)$r.squared

# Answer Ex 5.2
library(AER)

# using coeftest in the lmtest package
# using heteroskedasticity-robust variance with the HC1 type
test1 <- coeftest(teaching.ols, vcov=vcovHC(teaching.ols, type = "HC1"))
t.beauty <- test1[2, 3]
p.beauty <- test1[2, 4]
#+END_EXAMPLE
